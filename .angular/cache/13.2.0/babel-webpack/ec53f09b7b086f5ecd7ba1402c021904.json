{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { DayPilot } from \"@daypilot/daypilot-lite-angular\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./data.service\";\nimport * as i2 from \"@daypilot/daypilot-lite-angular\";\nconst _c0 = [\"day\"];\nconst _c1 = [\"week\"];\nconst _c2 = [\"month\"];\nconst _c3 = [\"navigator\"];\nexport let CalendarComponent = /*#__PURE__*/(() => {\n  class CalendarComponent {\n    constructor(ds) {\n      this.ds = ds;\n      this.events = [];\n      this.date = DayPilot.Date.today();\n      this.configNavigator = {\n        showMonths: 3,\n        cellWidth: 25,\n        cellHeight: 25,\n        onVisibleRangeChanged: args => {\n          this.loadEvents();\n        }\n      };\n      this.configDay = {};\n      this.configWeek = {\n        viewType: \"Week\",\n        onTimeRangeSelected: args => __awaiter(this, void 0, void 0, function* () {\n          const modal = yield DayPilot.Modal.prompt(\"Create a new event:\", \"Event 1\");\n          const dp = args.control;\n          dp.clearSelection();\n\n          if (!modal.result) {\n            return;\n          }\n\n          dp.events.add(new DayPilot.Event({\n            start: args.start,\n            end: args.end,\n            id: DayPilot.guid(),\n            text: modal.result\n          }));\n        })\n      };\n      this.configMonth = {};\n      this.viewWeek();\n    }\n\n    selectTomorrow() {\n      this.date = DayPilot.Date.today().addDays(1);\n    }\n\n    changeDate(date) {\n      this.configDay.startDate = date;\n      this.configWeek.startDate = date;\n      this.configMonth.startDate = date;\n    }\n\n    ngAfterViewInit() {\n      this.loadEvents();\n    }\n\n    loadEvents() {\n      const from = this.nav.control.visibleStart();\n      const to = this.nav.control.visibleEnd();\n      this.ds.getEvents(from, to).subscribe(result => {\n        this.events = result;\n      });\n    }\n\n    viewDay() {\n      this.configNavigator.selectMode = \"Day\";\n      this.configDay.visible = true;\n      this.configWeek.visible = false;\n      this.configMonth.visible = false;\n    }\n\n    viewWeek() {\n      this.configNavigator.selectMode = \"Week\";\n      this.configDay.visible = false;\n      this.configWeek.visible = true;\n      this.configMonth.visible = false;\n    }\n\n    viewMonth() {\n      this.configNavigator.selectMode = \"Month\";\n      this.configDay.visible = false;\n      this.configWeek.visible = false;\n      this.configMonth.visible = true;\n    }\n\n  }\n\n  CalendarComponent.ɵfac = function CalendarComponent_Factory(t) {\n    return new (t || CalendarComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n  };\n\n  CalendarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CalendarComponent,\n    selectors: [[\"calendar-component\"]],\n    viewQuery: function CalendarComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n        i0.ɵɵviewQuery(_c3, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.day = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.week = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.month = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nav = _t.first);\n      }\n    },\n    decls: 18,\n    vars: 15,\n    consts: [[1, \"container\"], [1, \"navigator\"], [3, \"config\", \"events\", \"date\", \"dateChange\"], [\"navigator\", \"\"], [1, \"content\"], [1, \"buttons\"], [3, \"click\"], [3, \"config\", \"events\"], [\"day\", \"\"], [\"week\", \"\"], [\"month\", \"\"]],\n    template: function CalendarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"daypilot-navigator\", 2, 3);\n        i0.ɵɵlistener(\"dateChange\", function CalendarComponent_Template_daypilot_navigator_dateChange_2_listener($event) {\n          return ctx.date = $event;\n        })(\"dateChange\", function CalendarComponent_Template_daypilot_navigator_dateChange_2_listener($event) {\n          return ctx.changeDate($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵelementStart(6, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function CalendarComponent_Template_button_click_6_listener() {\n          return ctx.viewDay();\n        });\n        i0.ɵɵtext(7, \"Day\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function CalendarComponent_Template_button_click_8_listener() {\n          return ctx.viewWeek();\n        });\n        i0.ɵɵtext(9, \"Week\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function CalendarComponent_Template_button_click_10_listener() {\n          return ctx.viewMonth();\n        });\n        i0.ɵɵtext(11, \"Month\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"daypilot-calendar\", 7, 8);\n        i0.ɵɵelement(14, \"daypilot-calendar\", 7, 9);\n        i0.ɵɵelement(16, \"daypilot-month\", 7, 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"config\", ctx.configNavigator)(\"events\", ctx.events)(\"date\", ctx.date);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassMap(ctx.configNavigator.selectMode == \"Day\" ? \"selected\" : \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassMap(ctx.configNavigator.selectMode == \"Week\" ? \"selected\" : \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassMap(ctx.configNavigator.selectMode == \"Month\" ? \"selected\" : \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"config\", ctx.configDay)(\"events\", ctx.events);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"config\", ctx.configWeek)(\"events\", ctx.events);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"config\", ctx.configMonth)(\"events\", ctx.events);\n      }\n    },\n    directives: [i2.DayPilotNavigatorComponent, i2.DayPilotCalendarComponent, i2.DayPilotMonthComponent],\n    styles: [\".container[_ngcontent-%COMP%]{display:flex;flex-direction:row}.navigator[_ngcontent-%COMP%]{margin-right:10px}.content[_ngcontent-%COMP%]{flex-grow:1}.buttons[_ngcontent-%COMP%]{margin-bottom:10px}button[_ngcontent-%COMP%]{background-color:#3c78d8;color:#fff;border:0;padding:.5rem 1rem;width:80px;font-size:14px;cursor:pointer;margin-right:5px}button.selected[_ngcontent-%COMP%]{background-color:#1c4587}\"]\n  });\n  return CalendarComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}